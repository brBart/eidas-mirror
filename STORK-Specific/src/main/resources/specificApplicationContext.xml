<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">


	<!--

    <import resource="classpath:schedulerApplicationContext.xml"/>
	<import resource="classpath:webserviceApplicationContext.xml"/>
	-->

	<!--util:properties id="specificProps" location="classpath:specific.properties" local-override="true"/-->


	<!-- MAP -->
	<util:map id="derivedImpls" map-class="java.util.Hashtable">
		<entry key="age" value-ref="deriveAge" />
		<entry key="isAgeOver" value-ref="deriveIsAgeOver" />
        <entry key="eIdentifier" value-ref="deriveEid" />
        <entry key="PersonIdentifier" value-ref="deriveEidasEid" />
        <entry key="LegalPersonIdentifier" value-ref="deriveEidasEid" />
	</util:map>

	<util:map id="normaliseImpls" map-class="java.util.Hashtable">
		<entry key="dateOfBirth" value-ref="normaliseDateOfBirth" />
	</util:map>

	<util:map id="validateImpls" map-class="java.util.Hashtable">
		<entry key="gender" value-ref="validateGender" />
		<entry key="countryCodeOfBirth" value-ref="validateCountryCodeOfBirth" />
		<entry key="nationalityCode" value-ref="validateNationalityCode" />
		<entry key="maritalStatus" value-ref="validateMaritalStatus" />
	</util:map>

    <!-- Specific Bean -->
    <bean id="specificPeps" class="${specific.peps}">
        <property name="specificProps" ref="placeholderConfig" />
        <property name="derivedImpls" ref="derivedImpls" />
        <property name="normaliseImpls" ref="normaliseImpls" />
        <property name="validateImpls" ref="validateImpls" />
        <property name="samlEngineFactory" ref="samlEngineFactory" />
        <property name="cpepsProperties" ref="pepsProps" />
        <property name="samlEngine" value="${cpeps.saml.idp:Specific}" />
        <property name="cpepsMetadataUrl" value="${cpeps.metadata.url}"/>
        <property name="cpepsRequesterMetadataUrl" value="${cpeps.requester.metadata.url}"/>
        <property name="cpepsMetadataActive" value="${cpeps.metadata.activate:true}"/>
    </bean>

    <!-- Attribute Value Derivation -->
	<bean id="normaliseDateOfBirth" class="${dateOfBirth.implemention}">
		<property name="pattern" value="${dateOfBirth.stork.format}" />
		<property name="hasSeparator" value="${dateOfBirth.hasSeparator}" />
		<property name="specificSeparator" value="${dateOfBirth.specific.separator}" />
	</bean>

	<!-- Derivation -->
	<bean id="deriveAge" class="${derive.age.impl}">
		<property name="pattern" value="${dateOfBirth.stork.format}" />
		<property name="hasSeparator" value="${dateOfBirth.hasSeparator}" />
		<property name="specificSeparator" value="${dateOfBirth.specific.separator}" />
	</bean>

	<bean id="deriveIsAgeOver" class="${derive.isAgeOver.impl}">
		<property name="pattern" value="${dateOfBirth.stork.format}" />
		<property name="hasSeparator" value="${dateOfBirth.hasSeparator}" />
		<property name="specificSeparator" value="${dateOfBirth.specific.separator}" />
	</bean>

    <bean id="deriveEid" class="${derive.eId.impl}">
        <property name="destCountry" value="${cpeps.countrycode}" />
    </bean>

    <bean id="deriveEidasEid" class="${derive.eIDASID.impl}">
        <property name="destCountry" value="${cpeps.countrycode}" />
    </bean>

    <!-- Validation -->
	<bean id="validateGender" class="${validate.gender.impl}" />
	<bean id="validateCountryCodeOfBirth" class="${validate.countryCodeOfBirth.impl}" />
	<bean id="validateNationalityCode" class="${validate.nationalityCode.impl}" />
	<bean id="validateMaritalStatus" class="${validate.maritalStatus.impl}" />

    <!-- IdP replies here -->
    <bean id="springManagedSpecificIdPResponse" class="eu.stork.peps.SpecificIdPBean"
          scope="prototype">
        <property name="session" ref="cPepsSession" />
        <property name="specificPeps" ref="specificPeps" />
    </bean>

    <!-- Connect to AP -->
    <bean id="springManagedAPSelector" class="eu.stork.peps.APSelectorBean"
          scope="prototype">
        <property name="specificPeps" ref="specificPeps" />
        <property name="session" ref="cPepsSession" />
        <property name="sigModuleExists" value="${sigModule.exists}" />
        <property name="externalAP" value="${external.ap}" />
        <property name="numberOfAps" value="${ap.number}" />
        <property name="callbackURL" value="${cpeps.specificapredirect.url}" />
        <property name="sigCreatorModuleURL" value="${signedDoc.sigCreatorModuleURL}" />
        <property name="dataURL" value="${signedDoc.DataURL}" />
        <property name="attribute" value="signedDoc" />
    </bean>

    <!-- Connect to IdP -->
    <bean id="springManagedCitizenAuthentication" class="eu.stork.peps.CitizenAuthenticationBean"
          scope="prototype">
        <property name="session" ref="cPepsSession" />
        <property name="specAuthenticationPeps" ref="specificPeps" />
        <property name="externalAuth" value="${external.authentication}" />
        <property name="idpUrl" value="${idp.url}" />
    </bean>

    <!-- Handles Signature Creator Response -->
    <bean id="springManagedSigCreatorResp" class="eu.stork.peps.SignatureCreatorResponseBean"
          scope="prototype">
        <property name="session" ref="cPepsSession" />
        <property name="callbackURL" value="${signedDoc.returnURL}" />
    </bean>

    <!-- Signature Creator Return -->
    <bean id="springManagedSigCreatorReturn" class="eu.stork.peps.SignatureCreatorReturnBean"
          scope="prototype">
        <property name="session" ref="cPepsSession" />
        <property name="attribute" value="signedDoc" />
    </bean>


</beans>